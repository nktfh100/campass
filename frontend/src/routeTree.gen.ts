/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ScanLazyImport = createFileRoute('/scan')()
const IndexLazyImport = createFileRoute('/')()
const TicketGuestIdLazyImport = createFileRoute('/ticket/$guestId')()
const LoginUserLazyImport = createFileRoute('/login/user')()
const LoginGuestLazyImport = createFileRoute('/login/guest')()
const LoginGlobalLazyImport = createFileRoute('/login/global')()
const LoginAdminLazyImport = createFileRoute('/login/admin')()
const DashboardUserLazyImport = createFileRoute('/dashboard/user')()
const DashboardAdminLazyImport = createFileRoute('/dashboard/admin')()

// Create/Update Routes

const ScanLazyRoute = ScanLazyImport.update({
  path: '/scan',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/scan.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TicketGuestIdLazyRoute = TicketGuestIdLazyImport.update({
  path: '/ticket/$guestId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/ticket.$guestId.lazy').then((d) => d.Route),
)

const LoginUserLazyRoute = LoginUserLazyImport.update({
  path: '/login/user',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/user.lazy').then((d) => d.Route))

const LoginGuestLazyRoute = LoginGuestLazyImport.update({
  path: '/login/guest',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/guest.lazy').then((d) => d.Route))

const LoginGlobalLazyRoute = LoginGlobalLazyImport.update({
  path: '/login/global',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/global.lazy').then((d) => d.Route))

const LoginAdminLazyRoute = LoginAdminLazyImport.update({
  path: '/login/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/admin.lazy').then((d) => d.Route))

const DashboardUserLazyRoute = DashboardUserLazyImport.update({
  path: '/dashboard/user',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/user.lazy').then((d) => d.Route),
)

const DashboardAdminLazyRoute = DashboardAdminLazyImport.update({
  path: '/dashboard/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/admin.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/scan': {
      preLoaderRoute: typeof ScanLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin': {
      preLoaderRoute: typeof DashboardAdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/user': {
      preLoaderRoute: typeof DashboardUserLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/admin': {
      preLoaderRoute: typeof LoginAdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/global': {
      preLoaderRoute: typeof LoginGlobalLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/guest': {
      preLoaderRoute: typeof LoginGuestLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/user': {
      preLoaderRoute: typeof LoginUserLazyImport
      parentRoute: typeof rootRoute
    }
    '/ticket/$guestId': {
      preLoaderRoute: typeof TicketGuestIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ScanLazyRoute,
  DashboardAdminLazyRoute,
  DashboardUserLazyRoute,
  LoginAdminLazyRoute,
  LoginGlobalLazyRoute,
  LoginGuestLazyRoute,
  LoginUserLazyRoute,
  TicketGuestIdLazyRoute,
])

/* prettier-ignore-end */
